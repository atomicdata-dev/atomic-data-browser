name: Lint, build, test, deploy
permissions: write-all
on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          # version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
      # This is needed when playwright is used in tests #70
      - run: pnpm lint-fix
      - run: pnpm build
      - run: pnpm typecheck
      # Mayb we can do without these?
      # - run: npx playwright install-deps
      # - run: npx playwright install
      - name: Start dev server
        run: nohup pnpm start &
      - name: Run atomic-server docker image in background (for testing)
        run: nohup docker run -p 80:80 -p 443:443 -v atomic-storage:/atomic-storage joepmeneer/atomic-server:develop --initialize &
      - run: pnpm playwright-install
      - run: SERVER_URL=http://localhost pnpm test
      - name: Upload failed e2e test screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: e2e-test-screenshots
          path: data-browser/test-results
      - run: pnpm typedoc
      - name: Deploy production ðŸš€
        if: ${{github.ref == 'refs/heads/main'}}
        uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: data-browser/publish # The folder the action should deploy.
      - name: Deploy staging ðŸš€
        if: ${{github.ref != 'refs/heads/main'}}
        uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          branch: gh-pages
          folder: data-browser/publish # The folder the action should deploy.
          target-folder: staging
