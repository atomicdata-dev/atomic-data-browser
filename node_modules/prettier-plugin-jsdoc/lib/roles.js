"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TAGS_VERTICALLY_ALIGN_ABLE = exports.TAGS_TYPELESS = exports.TAGS_TYPE_NEEDED = exports.TAGS_SYNONYMS = exports.TAGS_ORDER = exports.TAGS_NEED_FORMAT_DESCRIPTION = exports.TAGS_NAMELESS = exports.TAGS_IS_CAMEL_CASE = exports.TAGS_DESCRIPTION_NEEDED = void 0;
const tags_1 = require("./tags");
const TAGS_SYNONYMS = {
    // One TAG TYPE can have different titles called SYNONYMS.  We want
    // to avoid different titles in the same tag so here is map with
    // synonyms as keys and tag type as value that we want to have in
    // final jsDoc.
    arg: tags_1.PARAM,
    argument: tags_1.PARAM,
    const: tags_1.CONSTANT,
    constructor: tags_1.CLASS,
    defaultvalue: tags_1.DEFAULT,
    desc: tags_1.DESCRIPTION,
    emits: tags_1.FIRES,
    examples: tags_1.EXAMPLE,
    exception: tags_1.THROWS,
    fileoverview: tags_1.FILE,
    func: tags_1.FUNCTION,
    host: tags_1.EXTERNAL,
    method: tags_1.FUNCTION,
    overview: tags_1.FILE,
    params: tags_1.PARAM,
    prop: tags_1.PROPERTY,
    return: tags_1.RETURNS,
    var: tags_1.MEMBER,
    virtual: tags_1.ABSTRACT,
    yield: tags_1.YIELDS,
};
exports.TAGS_SYNONYMS = TAGS_SYNONYMS;
const TAGS_NAMELESS = [
    tags_1.CATEGORY,
    tags_1.DESCRIPTION,
    tags_1.EXAMPLE,
    tags_1.EXTENDS,
    tags_1.RETURNS,
    tags_1.THROWS,
    tags_1.TODO,
    tags_1.YIELDS,
    tags_1.DEPRECATED,
    tags_1.OVERRIDE,
    tags_1.SINCE,
];
exports.TAGS_NAMELESS = TAGS_NAMELESS;
const TAGS_TYPELESS = [tags_1.DESCRIPTION, tags_1.EXAMPLE, tags_1.TODO, tags_1.DEPRECATED, tags_1.OVERRIDE, tags_1.SINCE];
exports.TAGS_TYPELESS = TAGS_TYPELESS;
const TAGS_DESCRIPTION_NEEDED = [tags_1.CATEGORY, tags_1.DESCRIPTION, tags_1.EXAMPLE, tags_1.SINCE, tags_1.TODO];
exports.TAGS_DESCRIPTION_NEEDED = TAGS_DESCRIPTION_NEEDED;
const TAGS_NEED_FORMAT_DESCRIPTION = [
    tags_1.CATEGORY,
    tags_1.DESCRIPTION,
    tags_1.PARAM,
    tags_1.PROPERTY,
    tags_1.RETURNS,
    tags_1.THROWS,
    tags_1.TODO,
    tags_1.TYPE,
    tags_1.TYPEDEF,
    tags_1.YIELDS,
    tags_1.DEPRECATED,
    tags_1.OVERRIDE,
];
exports.TAGS_NEED_FORMAT_DESCRIPTION = TAGS_NEED_FORMAT_DESCRIPTION;
const TAGS_TYPE_NEEDED = [
    tags_1.EXTENDS,
    tags_1.PARAM,
    tags_1.PROPERTY,
    tags_1.RETURNS,
    tags_1.THROWS,
    tags_1.TYPE,
    tags_1.TYPEDEF,
    tags_1.YIELDS,
];
exports.TAGS_TYPE_NEEDED = TAGS_TYPE_NEEDED;
const TAGS_VERTICALLY_ALIGN_ABLE = [
    tags_1.EXTENDS,
    tags_1.PARAM,
    tags_1.PROPERTY,
    tags_1.RETURNS,
    tags_1.THROWS,
    tags_1.TYPE,
    tags_1.TYPEDEF,
    tags_1.YIELDS,
];
exports.TAGS_VERTICALLY_ALIGN_ABLE = TAGS_VERTICALLY_ALIGN_ABLE;
const TAGS_IS_CAMEL_CASE = [tags_1.PROVIDES_MODULE];
exports.TAGS_IS_CAMEL_CASE = TAGS_IS_CAMEL_CASE;
const TAGS_ORDER = [
    tags_1.PROVIDES_MODULE,
    tags_1.FLOW,
    tags_1.ASYNC,
    tags_1.PRIVATE,
    tags_1.MEMBEROF,
    tags_1.VERSION,
    tags_1.AUTHOR,
    tags_1.DEPRECATED,
    tags_1.SINCE,
    tags_1.CATEGORY,
    tags_1.DESCRIPTION,
    tags_1.EXAMPLE,
    tags_1.ABSTRACT,
    tags_1.AUGMENTS,
    tags_1.CONSTANT,
    tags_1.DEFAULT,
    tags_1.EXTERNAL,
    tags_1.FILE,
    tags_1.FIRES,
    tags_1.TEMPLATE,
    tags_1.FUNCTION,
    tags_1.CLASS,
    tags_1.TYPEDEF,
    tags_1.TYPE,
    tags_1.CALLBACK,
    tags_1.PROPERTY,
    tags_1.PARAM,
    tags_1.EXTENDS,
    tags_1.MEMBER,
    tags_1.SEE,
    "other",
    tags_1.THROWS,
    tags_1.YIELDS,
    tags_1.RETURNS,
    tags_1.TODO,
];
exports.TAGS_ORDER = TAGS_ORDER;
