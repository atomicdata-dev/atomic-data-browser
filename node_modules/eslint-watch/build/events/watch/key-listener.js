"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _keypress = _interopRequireDefault(require("keypress"));

var _logger = require("../../logger");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* istanbul ignore file */
const logger = (0, _logger.createLogger)('events:key-listener');
var _default = {
  listen(keys = [], cllbk) {
    if (!process.stdin.setRawMode) {
      logger.debug('Process might be wrapped exiting keybinding');
      return;
    }

    (0, _keypress.default)(process.stdin);
    process.stdin.on('keypress', (char, key) => {
      logger.debug('%s was pressed', key ? key.name : char);

      if (!key) {
        return;
      }

      if (keys.includes(key.name)) {
        cllbk();
      }

      if (key.ctrl && key.name === 'c') {
        process.exit();
      }
    });
  }

};
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ldmVudHMvd2F0Y2gva2V5LWxpc3RlbmVyLmpzIl0sIm5hbWVzIjpbImxvZ2dlciIsImxpc3RlbiIsImtleXMiLCJjbGxiayIsInByb2Nlc3MiLCJzdGRpbiIsInNldFJhd01vZGUiLCJkZWJ1ZyIsIm9uIiwiY2hhciIsImtleSIsIm5hbWUiLCJpbmNsdWRlcyIsImN0cmwiLCJleGl0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBQ0E7Ozs7QUFGQTtBQUlBLE1BQU1BLE1BQU0sR0FBRywwQkFBYSxxQkFBYixDQUFmO2VBRWU7QUFDYkMsRUFBQUEsTUFBTSxDQUFDQyxJQUFJLEdBQUcsRUFBUixFQUFZQyxLQUFaLEVBQW1CO0FBQ3ZCLFFBQUksQ0FBQ0MsT0FBTyxDQUFDQyxLQUFSLENBQWNDLFVBQW5CLEVBQStCO0FBQzdCTixNQUFBQSxNQUFNLENBQUNPLEtBQVAsQ0FBYSw2Q0FBYjtBQUNBO0FBQ0Q7O0FBRUQsMkJBQVNILE9BQU8sQ0FBQ0MsS0FBakI7QUFFQUQsSUFBQUEsT0FBTyxDQUFDQyxLQUFSLENBQWNHLEVBQWQsQ0FBaUIsVUFBakIsRUFBNkIsQ0FBQ0MsSUFBRCxFQUFPQyxHQUFQLEtBQWU7QUFDMUNWLE1BQUFBLE1BQU0sQ0FBQ08sS0FBUCxDQUFhLGdCQUFiLEVBQStCRyxHQUFHLEdBQUdBLEdBQUcsQ0FBQ0MsSUFBUCxHQUFjRixJQUFoRDs7QUFFQSxVQUFJLENBQUNDLEdBQUwsRUFBVTtBQUNSO0FBQ0Q7O0FBRUQsVUFBSVIsSUFBSSxDQUFDVSxRQUFMLENBQWNGLEdBQUcsQ0FBQ0MsSUFBbEIsQ0FBSixFQUE2QjtBQUMzQlIsUUFBQUEsS0FBSztBQUNOOztBQUVELFVBQUlPLEdBQUcsQ0FBQ0csSUFBSixJQUFZSCxHQUFHLENBQUNDLElBQUosS0FBYSxHQUE3QixFQUFrQztBQUNoQ1AsUUFBQUEsT0FBTyxDQUFDVSxJQUFSO0FBQ0Q7QUFDRixLQWREO0FBZUQ7O0FBeEJZLEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBpc3RhbmJ1bCBpZ25vcmUgZmlsZSAqL1xuaW1wb3J0IGtleXByZXNzIGZyb20gJ2tleXByZXNzJztcbmltcG9ydCB7IGNyZWF0ZUxvZ2dlciB9IGZyb20gJy4uLy4uL2xvZ2dlcic7XG5cbmNvbnN0IGxvZ2dlciA9IGNyZWF0ZUxvZ2dlcignZXZlbnRzOmtleS1saXN0ZW5lcicpO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGxpc3RlbihrZXlzID0gW10sIGNsbGJrKSB7XG4gICAgaWYgKCFwcm9jZXNzLnN0ZGluLnNldFJhd01vZGUpIHtcbiAgICAgIGxvZ2dlci5kZWJ1ZygnUHJvY2VzcyBtaWdodCBiZSB3cmFwcGVkIGV4aXRpbmcga2V5YmluZGluZycpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGtleXByZXNzKHByb2Nlc3Muc3RkaW4pO1xuXG4gICAgcHJvY2Vzcy5zdGRpbi5vbigna2V5cHJlc3MnLCAoY2hhciwga2V5KSA9PiB7XG4gICAgICBsb2dnZXIuZGVidWcoJyVzIHdhcyBwcmVzc2VkJywga2V5ID8ga2V5Lm5hbWUgOiBjaGFyKTtcblxuICAgICAgaWYgKCFrZXkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoa2V5cy5pbmNsdWRlcyhrZXkubmFtZSkpIHtcbiAgICAgICAgY2xsYmsoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGtleS5jdHJsICYmIGtleS5uYW1lID09PSAnYycpIHtcbiAgICAgICAgcHJvY2Vzcy5leGl0KCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG59O1xuIl19