"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _logger = require("../logger");

const logger = (0, _logger.createLogger)('commands');
const commands = [require('./clear'), require('./version'), require('./versions')];
var _default = {
  async run(options) {
    const runnable = commands.filter(c => c.trigger(options));
    logger.debug('Running %o esw commands', runnable.length);
    const result = await Promise.all(runnable.map(c => {
      logger.debug('Running %s', c.name);
      return c.run(options);
    }));
    const results = result.join('\n');
    logger.debug('Success:', results);
    return results;
  }

};
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kcy9pbmRleC5qcyJdLCJuYW1lcyI6WyJsb2dnZXIiLCJjb21tYW5kcyIsInJlcXVpcmUiLCJydW4iLCJvcHRpb25zIiwicnVubmFibGUiLCJmaWx0ZXIiLCJjIiwidHJpZ2dlciIsImRlYnVnIiwibGVuZ3RoIiwicmVzdWx0IiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsIm5hbWUiLCJyZXN1bHRzIiwiam9pbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBLE1BQU1BLE1BQU0sR0FBRywwQkFBYSxVQUFiLENBQWY7QUFFQSxNQUFNQyxRQUFRLEdBQUcsQ0FBQ0MsT0FBTyxDQUFDLFNBQUQsQ0FBUixFQUFxQkEsT0FBTyxDQUFDLFdBQUQsQ0FBNUIsRUFBMkNBLE9BQU8sQ0FBQyxZQUFELENBQWxELENBQWpCO2VBRWU7QUFDYixRQUFNQyxHQUFOLENBQVVDLE9BQVYsRUFBbUI7QUFDakIsVUFBTUMsUUFBUSxHQUFHSixRQUFRLENBQUNLLE1BQVQsQ0FBaUJDLENBQUQsSUFBT0EsQ0FBQyxDQUFDQyxPQUFGLENBQVVKLE9BQVYsQ0FBdkIsQ0FBakI7QUFFQUosSUFBQUEsTUFBTSxDQUFDUyxLQUFQLENBQWEseUJBQWIsRUFBd0NKLFFBQVEsQ0FBQ0ssTUFBakQ7QUFFQSxVQUFNQyxNQUFNLEdBQUcsTUFBTUMsT0FBTyxDQUFDQyxHQUFSLENBQ25CUixRQUFRLENBQUNTLEdBQVQsQ0FBY1AsQ0FBRCxJQUFPO0FBQ2xCUCxNQUFBQSxNQUFNLENBQUNTLEtBQVAsQ0FBYSxZQUFiLEVBQTJCRixDQUFDLENBQUNRLElBQTdCO0FBQ0EsYUFBT1IsQ0FBQyxDQUFDSixHQUFGLENBQU1DLE9BQU4sQ0FBUDtBQUNELEtBSEQsQ0FEbUIsQ0FBckI7QUFPQSxVQUFNWSxPQUFPLEdBQUdMLE1BQU0sQ0FBQ00sSUFBUCxDQUFZLElBQVosQ0FBaEI7QUFFQWpCLElBQUFBLE1BQU0sQ0FBQ1MsS0FBUCxDQUFhLFVBQWIsRUFBeUJPLE9BQXpCO0FBRUEsV0FBT0EsT0FBUDtBQUNEOztBQWxCWSxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlTG9nZ2VyIH0gZnJvbSAnLi4vbG9nZ2VyJztcbmNvbnN0IGxvZ2dlciA9IGNyZWF0ZUxvZ2dlcignY29tbWFuZHMnKTtcblxuY29uc3QgY29tbWFuZHMgPSBbcmVxdWlyZSgnLi9jbGVhcicpLCByZXF1aXJlKCcuL3ZlcnNpb24nKSwgcmVxdWlyZSgnLi92ZXJzaW9ucycpXTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBhc3luYyBydW4ob3B0aW9ucykge1xuICAgIGNvbnN0IHJ1bm5hYmxlID0gY29tbWFuZHMuZmlsdGVyKChjKSA9PiBjLnRyaWdnZXIob3B0aW9ucykpO1xuXG4gICAgbG9nZ2VyLmRlYnVnKCdSdW5uaW5nICVvIGVzdyBjb21tYW5kcycsIHJ1bm5hYmxlLmxlbmd0aCk7XG5cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBQcm9taXNlLmFsbChcbiAgICAgIHJ1bm5hYmxlLm1hcCgoYykgPT4ge1xuICAgICAgICBsb2dnZXIuZGVidWcoJ1J1bm5pbmcgJXMnLCBjLm5hbWUpO1xuICAgICAgICByZXR1cm4gYy5ydW4ob3B0aW9ucyk7XG4gICAgICB9KVxuICAgICk7XG5cbiAgICBjb25zdCByZXN1bHRzID0gcmVzdWx0LmpvaW4oJ1xcbicpO1xuXG4gICAgbG9nZ2VyLmRlYnVnKCdTdWNjZXNzOicsIHJlc3VsdHMpO1xuXG4gICAgcmV0dXJuIHJlc3VsdHM7XG4gIH0sXG59O1xuIl19